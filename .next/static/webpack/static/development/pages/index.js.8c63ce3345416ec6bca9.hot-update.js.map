{"version":3,"file":"static/webpack/static/development/pages/index.js.8c63ce3345416ec6bca9.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Card, Image, Statistic, Divider, Grid } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Rental from '../ethereum/rental';\nimport web3 from '../ethereum/web3';\nimport Layout from '../components/Layout';\nimport { isMobileSSR, getWidth } from '../utils/device';\nimport { Link, Router } from '../routes';\n\nclass RentalIndex extends Component {\n\n    static async getInitialProps() { //uses static to make initial data fetching easier, no need for rendering\n        const deployedRents = await factory.methods.getDeployedRentals().call();\n        const status = await Promise.all(\n                deployedRents\n                .map((address) => {\n                return Rental(address).methods.getState().call();\n            })\n        );\n\n        const availableRents = deployedRents.filter((address, i) => \n            status[i] == \"PUBLISHED\"\n        );\n\n        const names = await Promise.all(\n                availableRents\n                .map((address) => {\n                return Rental(address).methods.productName().call();\n            })\n        );\n\n        const deposit = await Promise.all(\n                availableRents\n                .map((address) => {\n                return Rental(address).methods.deposit().call();\n            })\n        );\n\n        const rentalFee = await Promise.all(\n                availableRents\n                .map((address) => {\n                return Rental(address).methods.rentalFee().call();\n            })\n        );\n\n        const imageHashes = await Promise.all(\n                availableRents\n                .map((address) => {\n                return Rental(address).methods.imageHashes().call();\n            })\n        );\n\n        return { deployedRents, availableRents, names, deposit, rentalFee, imageHashes };\n    }\n\n    // renderRents() {\n        \n    //     const items = this.props.availableRents.map((address, i) => {\n    //         return {\n    //             header: this.props.names[i],\n    //             description: (\n    //                 <Link route={`/rents/${address}`}> \n    //                     <a>View Item</a> \n    //                 </Link>\n    //             ),\n    //             fluid: true \n    //         }\n    //     });\n\n    //     return <Card.Group items={items}/>;\n    // }\n\n    renderRents() {\n        //transform image here\n        const items = this.props.availableRents.map((address, i) => {\n            const deposit = web3.utils.fromWei(this.props.deposit[i].toString(), 'ether');\n            const feeHour = (web3.utils.fromWei(this.props.rentalFee[i].toString(), 'ether') * 60 * 60).toFixed(4);\n            return <Card key={i} link onClick={() => Router.pushRoute(`/rents/${address}`)}>\n                <Image src='https://react.semantic-ui.com/images/wireframe/white-image.png'/>\n                <Card.Content>\n                    <Card.Header>{this.props.names[i]}</Card.Header>\n                    <Card.Description textAlign='center'>\n                    <Grid columns='equal' stackable>\n                        <Grid.Row>\n                            <Grid.Column textAlign='right'>\n                                <Statistic size='mini' color='red'>\n                                    <Statistic.Label>Deposit</Statistic.Label>\n                                    <Statistic.Value>{deposit}</Statistic.Value>\n                                 </Statistic>\n                            </Grid.Column>\n                            <Grid.Column textAlign='left'>\n                                <Statistic size='mini' color='red'>\n                                    <Statistic.Label>Fee/Hour</Statistic.Label>\n                                    <Statistic.Value>{feeHour}</Statistic.Value>\n                                </Statistic>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                    </Card.Description>\n                </Card.Content>\n\n            </Card>\n        });\n\n        return <Card.Group itemsPerRow={4} doubling stackable> \n                    {items}\n                </Card.Group>;\n    }\n\n    render() {\n        const itemsLength = this.props.availableRents? this.props.availableRents.length : 0;\n        console.log('deployed rents' + this.props.deployedRents);\n\n        return(\n            <Layout>\n                <h3>Available Rent Items</h3>\n                <Divider hidden/>\n\n                {this.renderRents()}\n\n                <Divider hidden/>\n                <div style={{ marginTop: 20 }}>Found {itemsLength} Item(s).</div>\n                <Divider hidden/>\n            </Layout>\n        );\n    }\n}\n\nexport default RentalIndex;"],"mappingsjHA;AACA;;AADA;;AACA;AAGA;AACA;AACA;;AALA;AAOA;AAAA;AAAA;;AAIA;AAGA;AACA;AACA;;AALA;;AAOA;AAGA;AACA;AACA;;AALA;;AAOA;AAGA;AACA;AACA;;AALA;;AAOA;AAGA;AACA;AACA;;AALA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AA5CA;AACA;AAsHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}